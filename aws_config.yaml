# Cluster config
cluster_name: celltrip
max_workers: 6
upscaling_speed: 0.1  # Try to do one at a time
docker:
    head_image: "rayproject/ray:2.43.0-py310"
    worker_image: "rayproject/ray:2.43.0-py310-gpu"
    container_name: "ray_container"
    pull_before_run: False
    run_options:
        - --ulimit nofile=65536:65536
idle_timeout_minutes: 5

# AWS config
provider:
    type: aws
    region: us-east-2
    availability_zone: us-east-2a,us-east-2b,us-east-2c
    cache_stopped_nodes: True
auth:
    ssh_user: ubuntu

# Autoscaler node types
available_node_types:
    ray.head.default:
        resources: {}  # Could set VRAM here
        node_config:
            InstanceType: m5.large  # Cheap instance to leave up
            ImageId: ami-0ce21b0ce8e0f5a37  # us-east-2, takes around 140 GiB
            # EBS storage
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 200  # GiB
                      VolumeType: gp3
            # ECS and S3 permissions
            # NOTE: Use this https://github.com/ray-project/ray/issues/9327#issue-652026679
            #       with the solve in the comments, and remove comma from second line in s3
            IamInstanceProfile:
                Arn: arn:aws:iam::245432013314:instance-profile/ray-head-v1
    ray.worker.default:
        min_workers: 0
        max_workers: 5
        resources: {}
        node_config:
            InstanceType: g5.2xlarge  # 1 GPU; 16 Gb RAM
            # InstanceType: g4dn.2xlarge  # 1 GPU; 32 Gb RAM
            ImageId: ami-0ce21b0ce8e0f5a37  # us-east-2
            # EBS storage
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: 200  # GiB
                      # Throughput: 750  # MiB
                      VolumeType: gp3
            # S3 permissions
            IamInstanceProfile:
                Arn: arn:aws:iam::245432013314:instance-profile/ray-worker-v1

# Autoscaler config
head_node_type: ray.head.default
# Files or directories to copy to the head and worker nodes,
# e.g. "/path1/on/remote/machine": "/path1/on/local/machine"
file_mounts: {}
# Files or directories to copy from the head node to the worker nodes, list of paths
cluster_synced_files: []
# Sync file mounts from head to workers
file_mounts_sync_continuously: False
# Patterns for files to exclude when running rsync up or rsync down
rsync_exclude:
    - "**/.git"
    - "**/.git/**"
rsync_filter:
    - ".gitignore"

# Commands run before docker
initialization_commands: []

# List of shell commands to run inside docker
# NOTE: Use these for datasets too large for memory to load into EFS
setup_commands: []
head_setup_commands: []
worker_setup_commands: []

# Start ray
head_start_ray_commands:
    - ray stop
    - ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host=0.0.0.0
worker_start_ray_commands:
    - ray stop
    - ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
